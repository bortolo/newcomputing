version: 0.2

phases: 
    install:
        runtime-versions:
            python: latest
        commands:
            - echo "installing something"
    build:
        commands: 
            - export L_NAME=${LAMBDA_NAME}
            - export B_NAME=${BUCKET_NAME}
            - echo "Zipping lambda package..."
            - zip -r build_output.zip index.py
            - echo "DONE!"
            - echo "Updating the lambda code..."
            - aws lambda update-function-code --function-name $L_NAME --zip-file fileb://build_output.zip
            - sleep 5 #per permettere l'aggiornamento completo della funzione e fare il run dei test sulla funzione aggiornata
            - echo "DONE!"
    post_build:
        commands:
            - export L_NAME=${LAMBDA_NAME}
            - export B_NAME=${BUCKET_NAME}
            - echo "Launching test GET_status..."
            - PAYLOAD=$(cat test/GET_status.json | base64)
            - aws lambda invoke --function-name $L_NAME --payload "$PAYLOAD" GET_status_report.txt
            - cat GET_status_report.txt
            - echo "Launching test GET_employees..."
            - PAYLOAD=$(cat test/GET_employees.json | base64)
            - aws lambda invoke --function-name $L_NAME --payload "$PAYLOAD" GET_employees_report.txt
            - cat GET_employees_report.txt
            - echo "DONE!"
artifacts:
    files:
         - '*.txt'
    name: test-outputs-${CODEBUILD_START_TIME}
    packaging: none
    discard-paths: yes
